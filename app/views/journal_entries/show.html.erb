<% content_for :title, "Showing journal entry" %>

<div class="flex flex-col md:flex-row min-h-screen">
  <!-- Left Rail - Journal List -->
  <div class="w-full md:w-1/4 bg-gray-100 p-4 overflow-y-auto border-r border-gray-200">
    <h2 class="text-xl font-bold mb-4">Journal Entries</h2>
    <div class="mb-4">
      <%= link_to "New Entry", new_journal_entry_path, class: "w-full bg-blue-500 hover:bg-blue-600 text-white py-2 px-4 rounded text-center block" %>
    </div>
    <div id="entries-list">
      <% JournalEntry.order(created_at: :desc).each do |entry| %>
        <div class="mb-2 p-3 bg-white rounded shadow hover:shadow-md <%= 'border-l-4 border-blue-500' if entry == @journal_entry %>">
          <%= link_to journal_entry_path(entry) do %>
            <h3 class="font-semibold"><%= entry.title %></h3>
            <p class="text-sm text-gray-600"><%= entry.created_at.strftime("%B %d, %Y") %></p>
            <p class="text-sm text-gray-700 truncate"><%= entry.content.truncate(100) %></p>
          <% end %>
        </div>
      <% end %>
    </div>
  </div>

  <!-- Main Area - Journal Entry -->
  <div class="w-full md:w-2/4 p-6 overflow-y-auto">
    <div class="max-w-3xl mx-auto">
      <div class="mb-4 flex justify-between items-center">
        <h1 class="text-3xl font-bold"><%= @journal_entry.title %></h1>
        <div>
          <%= link_to "Edit", edit_journal_entry_path(@journal_entry), class: "rounded-md bg-blue-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-blue-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-blue-600" %>
          <%= link_to "Back", journal_entries_path, class: "rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50" %>
        </div>
      </div>
      
      <div class="bg-white rounded-lg shadow-lg p-6">
        <p class="text-sm text-gray-600 mb-4">Created: <%= @journal_entry.created_at.strftime("%B %d, %Y at %I:%M %p") %></p>
        
        <div class="prose max-w-none">
          <%= markdown(@journal_entry.content) %>
        </div>
        
        <div class="mt-6 pt-4 border-t border-gray-200">
          <h3 class="text-lg font-semibold mb-2">Version History</h3>
          <div class="space-y-2">
            <% @journal_entry.entry_versions.order(created_at: :desc).each do |version| %>
              <div class="text-sm p-2 bg-gray-50 rounded">
                <span class="font-medium"><%= version.change_type.capitalize %></span> at <%= version.created_at.strftime("%B %d, %Y at %I:%M %p") %>
              </div>
            <% end %>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Right Rail - AI Assistant -->
  <div class="w-full md:w-1/4 bg-gray-50 p-4 overflow-y-auto border-l border-gray-200">
    <h2 class="text-xl font-bold mb-4">AI Assistant</h2>
    <div class="bg-white rounded-lg shadow p-4">
      <p class="text-gray-700 mb-3">I'm here to help maintain your writing momentum.</p>
      <div id="ai-response" class="mt-4 p-4 bg-blue-50 rounded-lg">
        <p class="italic text-gray-600">What thoughts would you like to explore further in this entry?</p>
      </div>
      <button id="get-prompt" data-entry-id="<%= @journal_entry.id %>" class="mt-4 w-full px-4 py-2 bg-blue-500 hover:bg-blue-600 text-white rounded">
        Get Writing Prompt
      </button>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const getPromptButton = document.getElementById('get-prompt');
    const aiResponseDiv = document.getElementById('ai-response');
    
    getPromptButton.addEventListener('click', function() {
      const entryId = getPromptButton.getAttribute('data-entry-id');
      const entryContent = document.querySelector('.prose').textContent;
      
      // Show loading state
      aiResponseDiv.innerHTML = '<p class="italic text-gray-600">Thinking...</p>';
      
      // Send content to AI assistant
      fetch('/ai_assistant/prompt?content=' + encodeURIComponent(entryContent), {
        headers: {
          'Accept': 'application/json'
        }
      })
      .then(response => response.json())
      .then(data => {
        if (data.prompt) {
          aiResponseDiv.innerHTML = '<p class="italic text-gray-600">' + data.prompt + '</p>';
        } else {
          aiResponseDiv.innerHTML = '<p class="italic text-gray-600">I couldn\'t generate a prompt right now. Please try again later.</p>';
        }
      })
      .catch(error => {
        console.error('Error:', error);
        aiResponseDiv.innerHTML = '<p class="italic text-gray-600">There was an error connecting to the AI assistant. Please try again later.</p>';
      });
    });
  });
</script>
